
# Actor Setters
sactor.setxy.help=Sets the position of the actor.
sactor.setx.help=Sets the x position of the actor.
sactor.sety.help=Sets the y position of the actor.
sactor.setangle.help=Sets the angle towards which the actor faces in degrees.
sactor.rotate.help=Rotates the actor clockwise (CW).
sactor.rotate2.help=Rotates the actor counterclockwise (CCW).
sactor.setdxy.help=Sets the actor's velocity.
sactor.setdx.help=Sets the actor's horizontal (X) velocity.
sactor.setdy.help=Sets the actor's vertical (Y) velocity.
sactor.setvel.help=Set velocity using angle and magnitude (speed).
sactor.setav.help=Sets the actor's angular velocity (how quickly it rotates).
sactor.changeav.help=Changes the actor's angular velocity.
sactor.pushshove.help=Applies a directional force to the actor.
sactor.pushshove2.help=Applies a force to the actor at an angle.
sactor.torque.help=Applies a rotational force (torque) to the actor.
sactor.isanim.help=Is the given actor animating?
sactor.setanim.help=Switches the actor's animation state.
sactor.stringtoanim.help=Get animation by name. Use with switch animation, which only takes animations, not names.
sactor.setframe.help=Changes to the given frame for the current animation.
sactor.getframe.help=Gets the frame number for the current animation.
sactor.getnumframes.help=Gets the number of frames for the current animation.
sactor.getframeduration.help=Gets the length of the given frame of the current animation.
sactor.setframeduration.help=Sets the length of the given frame of the current animation. 
sactor.setlayer.help=Sends the actor to the specified layer by ID (look at Layers pane for ID)
sactor.setlayer2.help=Sends the actor to the specified layer by ID or name
sactor.backforward.help=Sends the actor forward/backward in drawing order.
sactor.backone.help=Sends the actor back by one drawing layer.
sactor.forwardone.help=Brings the actor forward by one drawing layer.
sactor.toback.help=Sends the actor to the rear drawing layer.
sactor.tofront.help=Brings the actor to the front drawing layer.
sactor.movewithinlayer.help=Changes the drawing order of the actor with the layer.
sactor.zindex.help=Returns the drawing order (z-index) of the actor within the layer. 0 is at the bottom.
sactor.setzindex.help=Sets the drawing order (z-index) of the actor within the layer. 0 is at the bottom.
sactor.actorswithinlayer.help=Returns the number of actors within the layer with the given ID.
sactor.actorswithinlayer2.help=Returns the number of actors within the layer with the given ID or name.
sactor.setgroup.help=Changes the actor's actor group.
sactor.setcamanchor.help=Sets the actor's camera anchor.
sactor.bullet.help=Prevents the actor from traveling through terrain at high speeds.
sactor.anchortoscreen.help=Forces the actor to always be on screen (e.g. HUD). Coordinates are in screen space.
sactor.anchorfromscreen.help=Unanchors the actor from the screen.
sactor.ignoretolerance.help=Causes the actor to always simulate, even if off screen.
sactor.setprop.help=Puts the given value into the actor's property list. NOT THE SAME AS ATTRIBUTES.
sactor.getprop.help=Gets the desired value from the actor's property list. NOT THE SAME AS ATTRIBUTES.
sactor.die.help=Removes the actor from the scene.
sactor.recycle.help=Removes the actor from the scene and makes it reusable in the future.
sactor.killleavescreen.help=Kills the given actor after that actor leaves the screen. Useful for bullets.
sactor.setfricbounce.help=Change this actor's physical properties.
sactor.getfricbounce.help=Gets this actor's physical properties.
sactor.setfriction.help=Change this actor's friction.
sactor.setbounciness.help=Change this actor's bounciness.
sactor.filter.help=Applies the given effect to the actor.
sactor.clearfilter.help=Removes all effects from the actor.
sactor.togglegrav.help=Toggle scene gravity for the actor.
sactor.togglerot.help=Enables/Disables rotations for this actor.
sactor.toggleimage.help=Toggles automatic sprite drawing for this actor.
sactor.alpha.set.help=Sets the opacity of the actor.
sactor.alpha.get.help=Gets the opacity of the actor.
sactor.movetoby.help=Moves the actor to/by the given point/amount over time.
sactor.spintoby.help=Rotates the actor to/by the given angle over time.
sactor.fadeinout.help=Fades in/out the actor's graphics over time.
sactor.moveto.help=Moves the actor to the given point over time.
sactor.moveby.help=Moves the actor by the given amount over time.
sactor.spinto.help=Rotates the actor to the given angle over time.
sactor.spinby.help=Rotates the actor by the given angle over time.
sactor.fadeto.help=Fades the actor's graphic to the given transparency level over time.
sactor.fadein.help=Fades in the actor's graphics over time.
sactor.fadeout.help=Fades out the actor's graphics over time.
sactor.scaleto.help=Resizes the actor's graphics to the given size (in percent) over time.
sactor.addshape.rectangle.help=Add a new rectangular collision shape to the actor.
sactor.addshape.circle.help=Add a new circular collision shape to the actor.
sactor.addshape.polygon.help=Add a new polygonal collision shape to the actor.
sactor.addshape.vertex.help=Define a vertex for the polygonal collision shape. Must be used within 'add polygonal collision shape to actor with vertices...'
sactor.foreach.shape.help=Loop over all collision shapes of an actor.
sactor.shape.sensorsolid.help=Make the current shape a sensor or a solid shape. Must be used inside 'for each collision shape of actor'.
sactor.shape.destroy.help=Remove the current shape from the actor. Must be used inside 'for each collision shape of actor'.
sactor.shape.scale.help=Scale the current shape. Must be used inside 'for each collision shape of actor'.
sactor.ispaused=(DEPRECATED)
# Actor Getters
sactor.xy.help=The actor's position (top-left, center, on-screen)
sactor.x.help=The actor's horizontal (X) position.
sactor.y.help=The actor's vertical (Y) position.
sactor.xc.help=The horizontal (X) coordinate of the actor's center.
sactor.yc.help=The vertical (Y) coordinate of the actor's center.
sactor.sx.help=The actor's horizontal (X) position on screen.
sactor.sy.help=The actor's vertical (Y) position on screen.
sactor.dxy.help=The actor's X/Y velocity
sactor.dx.help=The actor's horizontal (X) velocity.
sactor.dy.help=The actor's vertical (Y) velocity.
sactor.angle.help=The angle towards which the actor is facing in degrees.
sactor.av.help=The actor's angular velocity (how quickly it rotates).
sactor.widthheight.help=The actor's width/height
sactor.width.help=The actor's width.
sactor.height.help=The actor's height.
sactor.hwidth.help=Half of the actor's width.
sactor.hheight.help=Half of the actor's height.
sactor.anim.help=The actor's current animation state.
sactor.layer.help=The actor's drawing layer.
sactor.group.help=The actor's actor group.
sactor.pickgroup.help=Pick an actor group.
sactor.picktype.help=Pick an actor type.
sactor.picktypebyname.help=Get the actor type with the given name.
sactor.atype.help=The actor's type.
sactor.isonscreen.help=Whether or not the actor is currently on screen.
sactor.isalive.help=Whether or not the actor is alive.
sactor.ignoregrav.help=Whether or not the actor is ignoring gravity.
# Events
event.step.help=Happens for every frame of the game.
event.init.help=Happens once when this Behavior is initialized.
event.draw.help=All drawing code goes here. Usually happens once a frame.
event.collide.help=Happens when this actor collides with another actor.
event.enterregion.help=Happens when this actor enters a region.
event.exitregion.help=Happens when this actor leaves a region.
event.msg.help=Happens when a Behavior uses the "tell" block to send messages (such as 'onClick' for button click). Similar to a function call.
event.return.help=Returns the given value. Can only be used inside a custom block.
event.cmsg.help=A customizable form of 'when [ ] happens' that allows new blocks to be created.
event.cmsg2.help=A customizable form of 'when [ ] happens' that allows new blocks to be created but isn't tied to an actor or scene.
event.key.pressrelease.help=Key pressed/released.
event.key.anypressrelease.help=Any key pressed/released.
event.mouse.pressrelease.help=Mouse pressed/released/moved/dragged.
event.mouse.enterexitactor.help=Mouse enters/exits/presses/releases/drags on an actor.
event.mouse.enterexitregion.help=Mouse enters/exits/presses/releases/drags on a region.
event.device.touch.help=Device is touched.
event.device.tilt.help=Device is tilted.
event.device.swipe.help=Device is swiped.
event.device.multitouch.help=Detects multi-touch events. Use the mouse events for regular, single-touch detection.
event.focus.changed.help=Game gains/loses focus.
event.gamepad.anypressrelease.help=Any gamepad button pressed/released.
event.paused.help=Game paused/unpaused.
event.soundfinished.help=Sound is done.
event.channelfinished.help=Channel is done.
event.actor.createkill.help=Actor is Created/Killed.
event.actor.region.help=Actor enters/leaves a Region.
event.actor.screen.help=Actor enters/leaves the Screen/Scene.
event.type.createkill.help=Actor of Type is created/killed.
event.type.region.help=Actor of type enters/leaves a region.
event.type.screen.help=Actor of type enters/leaves the screen/scene.
event.group.createkill.help=Member of group is created/killed.
event.group.region.help=Member of group enters/leaves a region.
event.group.screen.help=Member of group enters/leaves the screen/scene.
event.collide.actor.help=This actor collides with an actor.
event.collide.actortoactor.help=An actor collides with another actor.
event.collide.type.help=This actor collides with an actor of type.
event.collide.group.help=This actor collides with a member of group.
event.collide.actortotype.help=An actor collides with another actor of type.
event.collide.actortogroup.help=An actor collides with another actor of group.
event.collide.typetotype.help=An actor of type collides with another actor of type.
event.collide.grouptogroup.help=A member of group collides with another member of group.
event.att.number.help=Number becomes greater/less than number.
event.att.equals.help=Attribute becomes equal/not equal to attribute.
event.att.bool.help=Boolean becomes true/false.
event.custom.code.help=Arbitrary code.
event.custom.import.help=Import statements.
event.mobile.ads.help=When ads are shown.
event.mobile.purchases.help=When the player does a purchase.
event.mobile.gamecenter.help=When the Game Center is accessed.
event.mobile.keyboard.help=When the mobile keyboard is used.
event.helper.keycode.help=The key code of the pressed key.
event.helper.keychar.help=The character generated by the pressed key(s).
event.helper.actorentered.help=The actor that entered the screen/scene/region.
event.helper.actorcreated.help=The actor that has been created/killed.
event.helper.thisactor.help=The first actor that collided.
event.helper.otheractor.help=The second actor that collided.
event.helper.firstactor.help=The first actor that collided.
event.helper.secondactor.help=The second actor that collided.
event.helper.memberofgroup.help=The member of the given actor group that collided.
event.helper.actoroftype.help=The actor of the given actor type that collided. 
event.helper.mobile.purchase.help=The product ID of the product that triggered this event.
event.helper.mobile.gamecenter.help=The ID of the board or the achievement that triggered this event.
event.helper.mobile.keyboard.help=The text typed on the mobile keyboard.
event.helper.gamepad.input.help=The ID of the gamepad button that triggered this event.
# Flow
flow.while.help=Runs the code while the given condition is true.
flow.loopindex.help=Used with repeat. Returns the count of the current loop.
flow.repeat.help=Repeats the code the given number of times.
flow.repeatu.help=Repeats the code until the given condition is true.
flow.if.help=Runs the code if the given condition is true.
flow.ifelse.help=Runs the first body of code if the given condition is true. Otherwise runs the second body.
flow.elseif.help=Equivalent to if + otherwise-if.
flow.else.help=Runs the body of code if the if statement above evaluates to false.
flow.say.help=Sends a message to the given Behavior attached to the actor/scene.
flow.broadcast.help=Sends a message to all Behaviors attached to the actor/scene.
flow.dolater.help=Runs the code after the given delay.
flow.periodic.help=Runs the code every N seconds.
flow.stop.help=Stops execution of the Behavior's code for this frame.
flow.break.help=Stops execution of a loop's code.
flow.continue.help=Skips the rest of the code for an iteration of the loop.
flow.cancel.help=Cancels the execution of a periodic task.
flow.and.help=Evaluates to true if both conditions are true.
flow.or.help=Evaluates to true if either condition is true. 
flow.not.help=Evaluates to true if the condition is false.
flow.true.help=Literal true value.
flow.false.help=Literal false value.
flow.asboolean.help=Translates into true/false (usually passed as text).
# Numbers and Arithmetic
num.plus.help=Adds the two numbers together.
num.minus.help=Subtracts the second number from the first.
num.times.help=Multiplies the two numbers together.
num.divide.help=Divides the first number by the second.
num.mod.help=Returns the integer remainder of dividing the first number by the second.
num.neg.help=Equivalent to multipying the number by -1.
num.incdec.help=Adds/Subtracts N to the value of the number variable.
num.increment.help=Adds N to the value of the number variable.
num.decrement.help=Subtracts N from the value of the number variable.
num.generic.help=Does the performed operation.
num.trig.help=Returns the result of the selected trigonometric function.
num.round.help=Rounds the number to an integer. round: round to nearest integer / floor: round down / ceil: round up
num.abs.help=Takes the absolute value of the number.
num.minmax.help=Takes the smaller/larger of the two numbers.
num.min.help=Takes the smaller of the two numbers.
num.max.help=Takes the larger of the two numbers.
num.lnexp.help=Returns the natural log of the number or e to the given power.
num.ln.help=Returns the natural log of the number.
num.exp.help=Returns e to the given power.
num.sqrt.help=Takes the square root of the number.
num.pow.help=Raises the first number by the power given by the second.
num.asnumber.help=Translates value into a number.
num.atan2.help=Converts from rectangular to polar coordinates. Use for Vector math. 
num.eq.help=Returns true if the two sides are equal.
num.eq2.help=Returns true if the two sides are equal.
num.noteq.help=Returns true if the two numbers are different.
num.less.help=Returns true if the first number is less than the second.
num.more.help=Returns true if the first number is greater than the second.
num.lesseq.help=Returns true if the first number is less than or equal to the second.
num.moreeq.help=Returns true if the first number is greater than or equal to the second.
num.pi.help=Pi (3.14159...)
num.e.help=e (2.718, base of natural logarithm)
num.string.help=Returns the number in text form. Useful when printing.
num.randint.help=Returns random integer between first and second numbers inclusive.
num.rand.help=Returns random floating point number between 0 and 1 inclusive.
num.degreesradians.help=Converts number to degrees/radians.
num.degrees.help=Converts number to degrees.
num.radians.help=Converts number to radians.
# Mobile Controls
in.accelerometer.help=x/y/z of accelerometer
in.numtouches.help=Number of touch points
in.numtaps.help=Number of taps (useful for detecting double-taps)
in.begandraggedreleasedtouch.help=User touched/dragged/lifted finger off screen
in.draggedtouch.help=User dragging finger across screen
in.releasedtouch.help=User lifted any finger off screen
in.touchdragrelease.help=x/y of touch, drag or release point
in.touchdragreleaseactor.help=Did the user touch/drag/release the actor?
in.foreachtouchdragrelease.help=for each started/dragged/released touch point... (multi-touch)
in.touchpxy.help=x/y of touch point (in loop)
# Input
in.mousexy.help=Horizontal (X) or vertical (Y) position of mouse on screen.
in.mousex.help=Horizontal (X) position of mouse on screen.
in.mousey.help=Vertical (Y) position of mouse on screen.
in.mousepx.help=Horizontal (X) position of last mouse press on screen.
in.mousepy.help=Vertical (Y) position of last mouse press on screen.
in.mouserx.help=Horizontal (X) position of last mouse release on screen.
in.mousery.help=Vertical (Y) position of last mouse release on screen.
in.mousestate.help=Was the mouse button pressed/released?
in.mousep.help=Was the mouse button pressed? (the action)
in.mouser.help=Was the mouse button released? (the action)
in.mousedisp.help=show mouse cursor
in.mousednew.help=Is the mouse button currently up/down?
in.simulate.key.help=Simulate a key press. Particularly useful for mobile games and virtual keys.
in.keystate.help=Is the given key down/up, or was the given key pressed/released?
in.keypress2.help=Was the given key pressed?
in.keyrelease2.help=Was the given key released?
in.keydown2new.help=Is the given key currently up?
in.specialdown.help=Is the shift key or the control key down?
in.keycode.help=The keycode of the selected key. Compare it with the keycode return by the 'Any Key' event.
in.shiftdown.help=Is the shift key down?
in.ctrldown.help=Is the control key down?
in.amousestate.help=Is the cursor within the actor's bounds, or was the mouse button pressed/released on the actor's bounds?
in.amoused.help=Is the cursor within the actor's bounds and the mouse button down?
in.amouseo.help=Is the cursor within the actor's bounds?
in.amouseh.help=Is the cursor within the actor's bounds, without the mouse button being down, just pressed, or just released?
in.amousep.help=Is the cursor within the actor's bounds and the mouse button just pressed?
in.amouser.help=Is the cursor within the actor's bounds and the mouse button just released?
in.joystick.info.help=Joystick direction in degrees (0 - 360) or distance (magnitude) between 0 and 1 inclusive
in.joystick.toggle.help=Enable/Disable the joystick
in.joystick.style.help=Fixed in place or show where finger's pressed
in.joystick.setxy.help=Set position for joystick (Only works in Fixed mode)
in.joystick.dir.help=(DEPRECATED)
in.joystick.mag.help=(DEPRECATED)
in.swipe.detect.help=Swiped the screen up/down/left/right.
in.swipe.toggle.help=Enable gesture detection like swiping. Must explicitly enable to turn it on. May conflict with multi-touch when on.
in.vibrate.help=Vibrates the device, if vibration is available.
in.actordrag.help=Makes the actor auto-draggable. Use a sensitivity of 1000.
in.gamepad.enable.help=Enables the use of gamepads.
in.gamepad.map.help=Binds a button on the gamepad to a control.
in.gamepad.sensitivity.help=Set the sensitivity for axes on the gamepad. Anything under this sensitivity won't be detected as a button press.
in.gamepad.pressure.help=If a gamepad axis is bound to this control, this will return a number from 0 to 1 depending on how far the axis is pressed. Otherwise this will return 1 if pressed, 0 if not.
in.gamepad.saveconfig.help=Save current gamepad configuration to filename.
in.gamepad.loadconfig.help=Load gamepad configuration from filename.
# Scene
scene.actor.help=Choose an actor.
scene.joint.help=Choose a joint.
scene.region.help=Choose a region.
scene.terrain.region.help=Choose a terrain.
scene.change.help=Switches to a different scene using a visual transition.
scene.reload.help=Reloads the current scene using a visual transition.
scene.change.color.help=Switches to a different scene using a visual transition.
scene.reload.color.help=Reloads the current scene using a visual transition.
scene.change.through.help=Switches to a different scene using a visual transition.
scene.reload.through.help=Reloads the current scene using a visual transition.
scene.istransition.help=Returns true if scene is in transition mode.
scene.createractor.help=Creates a recycled actor.
scene.createactor.help=Creates an actor.
scene.createactoronlayer.help=Creates an actor on a specific layer.
scene.createactor.next.help=Creates an actor in the next scene.
scene.actor.foreach.help=Fetches all actors of the given type.
scene.actor.foreach.actor.help=References the current actor and must be used inside 'for every actor of type...'
scene.group.foreach.help=Fetches all actors that are members of the group.
scene.group.foreach.actor.help=References the current actor and must be used inside 'for every member of...'
scene.screenactor.foreach.help=Loops over all actors on the screen.
scene.screenactor.foreach.actor.help=References the current actor and must be used inside 'for each actor on screen...'
scene.actor.pauseall.help=Pause or unpause every actor in this scene.
scene.actor.pauseall.group.help=Pause or unpause every actor in the given group.
scene.region.foreach.help=Fetches all actors inside the region.
scene.region.foreach.actor.help=References the current actor and must be used inside 'for every actor inside...'
scene.region.reset.help=Resets region to original size.
scene.region.setsize1.help=Sets size of circular region to given diameter.
scene.region.setsize2.help=Sets size of box region to given width and height.
scene.region.pos.help=Gets position of region.
scene.region.size.help=Gets size of region.
scene.terrain.region.reset.help=Resets terrain to original size.
scene.terrain.region.setsize1.help=Sets size of circular terrain to given diameter.
scene.terrain.region.setsize2.help=Sets size of box terrain to given width and height.
scene.terrain.region.pos.help=Gets position of terrain.
scene.terrain.region.size.help=Gets size of terrain.
scene.gravxy.help=Horizontal (X) or Vertical (Y) world gravity.
scene.gravx.help=Horizontal (X) world gravity.
scene.gravy.help=Vertical (Y) world gravity.
scene.gravs.help=Sets the world's gravity.
scene.showhidelayer2.help=Shows/Hides the given layer.
scene.showhidelayer.help=Shows/Hides the given layer (use ID).
scene.showlayer.help=Shows the given tile layer (use ID).
scene.hidelayer.help=Hides the given tile layer (use ID).
scene.fadeto2.help=Fades the given layer to the specified alpha (0 - 100%) over time.
scene.fadeto.help=Fades the given tile layer to the specified alpha (0 - 100%) over time.
scene.setcolorbg.help=Changes the background color to a solid color.
scene.setgradbg.help=Changes the background color to a vertical gradient.
scene.setbgspeed.help=Changes the speed that the specified background layer scrolls at (must have already been a scrolling background).
scene.setbgimage.help=Change the image displayed in the specified background layer.
scene.setlayerscrollfactor.help=Change the speed at which a layer scrolls, as a percentage of the baseline.
scene.numlayers.help=The number of layers.
scene.getlayerorder.help=Get the display order of the specified layer. 0 is the back, higher numbers are closer.
scene.setlayerorder.help=Set the display order of the specified layer. 0 is the back, higher numbers are closer.
scene.createlayerfrombg.help=Add a new background layer.
scene.createlayerfromimage.help=Add a new background layer using an image.
scene.removebglayer.help=Remove a background layer.
scene.getname.help=The current scene's name.
scene.getbyname.help=Get a Scene by its name. Use inside a switch to scene block.
scene.scenewh.help=The current scene's width/height in pixels/tiles.
scene.scenew.help=The current scene's width
scene.sceneh.help=The current scene's height
scene.scenewt.help=The current scene's width (in tiles)
scene.sceneht.help=The current scene's height (in tiles)
scene.tilewh.help=The current scene's tile width/height.
scene.tilew.help=The current scene's tile width
scene.tileh.help=The current scene's tile height
scene.tile.coord.help=Converts x/y coordinates to column/row in tile grid.
scene.tile.set.help=Sets a tile into the Scene at the given position.
scene.tile.exists.help=Returns true if a tile exists at the given position.
scene.tile.id.help=The ID of the tile at the given position, or -1 if no tile found.
scene.tile.collision.help=Returns true if ANY collision shape exists. If layer is a negative value, loops through all layers.
scene.tile.collisionid.help=ID of the collision shape for the tile at this position, or -1 if no tile found.
scene.tile.tsetid.help=ID of the tileset for the tile at this position, or -1 if no tile found.
scene.tile.remove.help=Remove tile at this position.
scene.tile.data.help=Get data for tile at this position. Returns empty text if no tile found.
scene.tile.set2.help=Sets a tile into the Scene at the given position.
scene.tile.exists2.help=Returns true if a tile exists at the given position.
scene.tile.id2.help=The ID of the tile at the given position, or -1 if no tile found.
scene.tile.collision2.help=Returns true if ANY collision shape exists. If layer ID is a negative value, loops through all layers.
scene.tile.collisionid2.help=ID of the collision shape for the tile at this position, or -1 if no tile found.
scene.tile.tsetid2.help=ID of the tileset for the tile at this position, or -1 if no tile found.
scene.tile.remove2.help=Remove tile at this position.
scene.tile.data2.help=Get data for tile at this position. Returns empty text if no tile found.
scene.cameramove.help=Moves the camera center to the given point.
scene.camerafollow.help=Forces the camera center to follow the given actor using its anchor point.
scene.toggle.fullscreen.help=Enables/Disables full-screen. Works for Flash & Desktop targets.
scene.isinregion.help=Returns true if the given actor is inside the given region.
scene.creater.help=Creates a region.
scene.createcr.help=Creates a circular region.
scene.deleter.help=Deletes a region.
scene.terrain.creater.help=Creates a terrain.
scene.mover.help=Moves the region to the given point.
scene.terrain.mover.help=Moves the terrain to the given point.
scene.followr.help=Forces the region to follow the given actor using its anchor point.
scene.back.help=UNUSED
scene.shake.start.help=Shake the screen. Good for conveying explosions or earthquakes. 1 is a good intensity.
scene.shake.stop.help=Immediately stop shaking the screen
scene.screenxy.help=The camera's horizontal (X) or vertical (Y) position.
scene.screenx.help=The camera's horizontal (X) position.
scene.screeny.help=The camera's vertical (Y) position.
scene.screenwh.help=The game's screen width/height.
scene.screenw.help=The game's screen width.
scene.screenh.help=The game's screen height.
scene.pause.help=Pause/Unpause the game. Opt out actors in the Physics > Advanced page.
scene.paused.help=Return true if the game is paused.
# Shaders
scene.shaders.apply.help=Enables shader. Existing shaders will be disabled.
scene.shaders.clear.help=Removes existing shaders from the game.
scene.shaders.file.help=Load a shader placed into a game's 'extras' directory.
scene.shaders.text.help=Define a shader inline using GLSL.
scene.shaders.combine.help=Combines 2 shaders together. If combining more than 2, stick further combines always in the second slot.
scene.shaders.combine3.help=Combines 3 shaders together.
scene.shaders.combine4.help=Combines 4 shaders together.
scene.shaders.hud.help=Enables/disables shaders for the HUD (top, non-scrolling) layer.
scene.shaders.time.help=Makes animated shaders run faster/slower. Useful for porting. 1.0 is normal time. 2.0 is twice as fast.
scene.shaders.set.help=Instantly set a shader's properties. Consult Stencylpedia for property names.
scene.shaders.tween.help=Change a shader's properties over time. Consult Stencylpedia for property names.
scene.shaders.hue.help=Adjusts the screen's hue in degrees.
scene.shaders.csb.help=Adjust the screen's contrast, saturation and brightness, in percentages.
scene.shaders.tint.help=Apply a color to the screen.
scene.shaders.filters.help=Apply simple filters (grayscale, inverse, sepia) to the screen.
scene.shaders.blur.help=Directional blur. x/y define a 'slope', so -1,-1 is a diagonal blur.
scene.shaders.sharpen.help=Sharpen with the given intensity.
scene.shaders.bloom.help=Causes highlights (bright areas) to bleed and blow.
scene.shaders.grain.help=Apply a dynamic, film grain effect to the screen.
scene.shaders.scanline.help=Apply TV-like scanlines to the screen.
# Game
web.browser.help=Open URL in default web browser.
web.visit.help=Make HTTP GET request and asynchronously wait for response.
web.post.help=Make HTTP POST request and asynchronously wait for response.
web.visit.response.help=Response from site (typically HTML, XML or JSON)
scene.savegame.help=Save the game.
scene.loadgame.help=Load save game.
scene.savesuccess.help=Returns whether the game was successfully saved.
scene.loadsuccess.help=Returns whether the game was successfully loaded.
scene.saveloadsuccess.help=Checks to see if saving/loading was successful.
game.user.currname.help=The current player's name or 'Guest' if they aren't logged in.
# Kongregate
game.kong.init.help=Call this before using any Kongregate blocks.
game.kong.submit.help=Submits a score to Kongregate. Remember to set it up first!
game.kong.guest.help=Is the current player a guest?
game.kong.username.help=Name of the current player, or Guest.
game.kong.userid.help=User ID of the current player, or 0 for guests.
# Newgrounds
game.ng.score.submit.help=Submit a score to Newgrounds
game.ng.score.show.help=Show a Newgrounds score board
game.ng.ad.show.help=Show a Newgrounds inter-level ad
game.ng.medal.help=Unlock a medal on Newgrounds
game.ng.medal.move.help=Move the Newgrounds medal position
# Game Center
gamecenter.init.help=Initializes Game Center API
gamecenter.board.submit.help=Submits a score to Game Center
gamecenter.board.show.help=Opens up the master leaderboard in Game Center
gamecenter.achievement.submit.help=Submit an achievement to Game Center
gamecenter.achievement.showreset.help=Show achievements board or erase Player's achievement data for this game
gamecenter.achievement.banner.help=Show a Game Center achievement banner
gamecenter.player.idname.help=Display Name or Internal ID
gamecenter.player.auth.help=Returns true if Game Center is initialized
# iAds
iad.showhide.help=Show/Hide iAds
iad.height.help=Height of the iAd - it changes based on portrait/landscape
# iOS - Other
ios.badge.number.help=Sets the app icon's badge number (unread msgs for e-mail). iOS only.
mobile.alert.help=Shows an alert dialog to the user.
mobile.keyboard.help=Shows the mobile keyboard. Typing comes back as regular key strokes / events.
mobile.keyboard.set.help=Sets the text for the mobile keyboard.
mobile.keyboard.clear.help=Sets the text for the mobile keyboard.
# IAP
ios.iap.buyuse.help=Make an in-app purchase or use a consumable one instantly. Buying will prompt user.
ios.iap.purchased.help=Has the user already purchased this? (for non-consumable products)
ios.iap.loaded.help=Returns true if the purchases have been loaded in from iTunes
ios.iap.restore.help=Restore player's purchases (if they're on a new device for example)
ios.iap.getquantity.help=Get number of items (for a consumable product)
ios.iap.titledescprice.help=Product title / description / price that you entered into iTunes Connect
ios.iap.requestinfo.help=Must be used before working with an in-app purchase. One per purchase ID.
android.iap.free.help=Must be used to repurchase unmanaged in-app purchases on Android.
# Google Play Services
gpg.init.signout.help=Sign In/Out of Google Play Games Services.
gpg.connection.help=Check connection state of Google Play Games Services.
gpg.show.all.help=Show game's achievements/leaderboards/quests.
gpg.show.leader.help=Show a specific leaderboard from the game.
gpg.unlock.achieve.help=Unlock a game's achievement.
gpg.inc.achieve.help=Increment value for an achievement by the given amount.
gpg.submit.score.help=Submit a score to a specific leaderboard.
gpg.update.event.help=Update an event by the given amount.
gpg.completed.quests.help=Gets list of completed quests.
gpg.check.quests.help=Checks if a new quest has been completed.
gpg.get.reward.help=Gets reward text for a completed quest.
# Image
image.create.help=Create a blank image with the given width/height.
image.copy.help=Clones an existing image.
image.screen.help=Takes a snapshot of the current screen as an image.
image.actor.help=Get an actor instance, in its currently displayed form, as an image.
image.file.help=Get an image bundled with the game. See online docs for details.
image.subimage.help=Create an image from part of an image.
image.resize.help=Create a scaled copy of an image.
image.url.help=Load an image from a website. If no connection or image, this will do nothing.
image.url.image.help=The loaded image.
image.inst.create.help=Create an instance of an image that can be attached to actor or layer.
image.inst.attach.actor.help=Attach an image instance to an actor.
image.inst.attach.layer.help=Attach an image instance to a layer (via layer ID).
image.inst.attach.layer2.help=Attach an image instance to a layer (via layer ID or name).
image.inst.attach.screen.help=Attach an image instance to screen, above everything else (does not obey scrolling).
image.inst.remove.help=Remove an image instance from whatever it's attached to.
image.data.image.help=Draws an image on top of another image.
image.data.text.help=Draws text onto an image.
image.data.clear.help=Clears a portion of an image.
image.data.clearall.help=Clears the entire image.
image.data.mask.help=Subtracts an image from another image.
image.data.fill.help=Fills an image with a color.
image.data.filter.help=Applies a filter (permanently) to an image.
image.data.set.pixel.help=Set pixel to color for image.
image.data.get.pixel.help=Get pixel's color from image.
image.data.swap.help=Swap one color to another for an image.
image.data.wrapper.help=Use this when doing many set pixels at once for better performance.
image.data.flip.help=Horizontally/vertically flip an image.
image.movetoby.help=Tween the position of an image instance.
image.spintoby.help=Tween the angle of an image instance.
image.fadeto.help=Tween the opacity of an image instance.
image.scaleto.help=Tween the size of an image instance.
image.blend.help=Sets the blend mode for an image instance. Only Add/Multiply/Screen work on Desktop/Mobile.
image.filter.help=Applies a filter(s) to an image instance.
image.clearfilter.help=Removes all filters from an image instance.
image.set.props0.help=Set position for an image instance.
image.set.props1.help=Set rotation for an image instance.
image.set.props2.help=Set percentage properties for an image instance.
image.set.origin.help=Set the pivot for growing and rotating an image instance.
image.get.props.help=Get properties for an image instance.
image.get.z.help=Drawing order within layer/actor for an image instance.
image.set.z.help=Sets drawing order within layer/actor for an image instance.
image.set.z2.help=Sets drawing order within layer/actor for an image instance.
image.to.text.help=Converts an image to text for future in-app use.
image.from.text.help=Converts text back to an image. This takes time.
image.rgb.help=Make a color from RGB. Fill in 0-255 for each channel.
# Sound
ssound.texttosound.help=Gets a sound by name (using text).
ssound.play.help=Plays the sound once.
ssound.loop.help=Plays the sound and loops forever.
ssound.playloop.help=Plays the sound once or loops the sound forever.
ssound.playloopchannel.help=Plays the sound once or loops the sound forever on the specified channel
ssound.controlchannel.help=Stops, pauses, or resumes playback of sounds on a specified channel
ssound.stopall.help=Stops playback of all sounds.
ssound.vol.help=Sets the global volume.
ssound.volchannel.help=Sets the volume of a channel
ssound.pan.help=Sets the global panning. (where the sound is played)
ssound.fade.help=Fades in/out global volume
ssound.fadechannel.help=Fades in/out sound on a specific channel
ssound.fadeo.help=Fades global volume out to silence.
ssound.fadei.help=Fades in global volume from silence.
ssound.pos.help=Get position for sound on a specific channel in millieseconds.
ssound.length.help=Get length of sound on a specific channel in millieseconds.
ssound.length2.help=Get length of a sound in milliseconds.
# GUI and Strings
gui.str.length.help=Returns the length of the string.
gui.str.combine.help=Combines the two pieces of text.
gui.str.empty.help=Returns true if the text is empty (same as "").
gui.str.beforeafter.help=Returns true or false depending on whether the first text comes before/after the second in alphabetical order.
gui.str.before.help=Returns true if the first text comes before the second in alphabetical order.
gui.str.after.help=Returns true if the first text comes after the second in alphabetical order.
gui.str.locof.help=Returns the index of the text, if it exists.
gui.str.replace.help=Searches for the given text and replaces with the new text. (Replace "ham" with "cheese" in "hamburger")
gui.str.substr.help=Returns a part of the text, taken from "start" to "end"-1.
gui.str.charat.help=Gets character at given position.
gui.str.toupperlower.help=Returns the text in all upper/lower case.
gui.str.toupper.help=Returns the text in all upper case.
gui.str.tolower.help=Returns the text in all lower case.
gui.str.trim.help=Trims whitespace from the end of the text.
gui.str.splitspace.help=Split text into a list using space as delimiter.
gui.str.split.help=Split text into a list using given delimiter.
# Attributes
vars.getvalue.help=Returns the value of the attribute.
vars.getvalue2.help=Returns the value of the attribute (true/false).
vars.setvalue.help=Sets the value of the attribute.
vars.generic.get.help=Returns the value of the attribute.
vars.generic.set.help=Sets the value of the attribute.
vars.value.help=Returns true or false by checking if the attribute's value is null/empty.  
vars.hasvalue.help=Returns true if the attribute's value is not null/empty.
vars.hasnovalue.help=Returns true if the attribute's value is null/empty.
vars.clear.help=Empties the attribute's value (sets to null).
vars.tween.num.help=Animates a number attribute to the given value over time.
vars.game.get.help=Get value of game attribute
vars.game.set.help=Set value of game attribute
vars.game.set.num.help=Set value of game attribute (number).
vars.game.get.num.help=Get value of game attribute (number).
vars.game.set.text.help=Set value of game attribute (text).
vars.game.get.text.help=Get value of game attribute (text).
vars.game.set.bool.help=Set value of game attribute (boolean).
vars.game.get.bool.help=Get value of game attribute (boolean).
vars.game.set.list.help=Set value of game attribute (list).
vars.game.get.list.help=Get value of game attribute (list).
# Lists
vars.list.add.help=Adds item to the end of the list.
vars.list.insert.help=Inserts item into list at the given position.
vars.list.remove.help=Removes first occurrence of item in the list.
vars.list.removeat.help=Removes item at given position of list.
vars.list.clear.help=Removes all items from list.
vars.list.replace.help=Replaces item at given position with new item.
vars.list.get.help=Retrieves item at given position.
vars.list.get.number.help=Equivalent to getting a list item and wrapping it in 'as number'
vars.list.get.text.help=Equivalent to getting a list item and wrapping it in 'as text'
vars.list.contains.help=Returns true if the list contains given item.
vars.list.length.help=Returns the number of items in the list.
vars.list.empty.help=Returns true if the list has no items.
vars.list.create.help=Creates a new list.
vars.list.copy.help=Creates a copy of the given list.
vars.list.foreach.help=Loops through every element of the given list.
vars.list.foreachitem.help=Gives the current item when looping. Used with 'for each item in...'
# Maps
vars.map.set.help=Maps key to given value for a map.
vars.map.remove.help=Removes a key from the map.
vars.map.empty.help=Removes all items from map.
vars.map.get.help=Retrieves value associated with given key in a map.
vars.map.exists.help=Returns true if the map contains given key.
vars.map.contains.help=Returns true if the map contains given value.
vars.map.count.help=Returns the number of items in the map.
vars.map.isempty.help=Returns true if the map has no items.
vars.map.create.help=Creates a new map
vars.map.copy.help=Creates a copy of the given map.
vars.map.foreach.help=Loops through every key or value of the given map.
vars.map.aslist.help=Returns a list containing every key or value of a map.
# Debug
adv.print.help=Prints out text to the console.
adv.comment.help=Type in a short comment. Has no effect on the game.
adv.showfps.help=Toggle framerate display
adv.fps.help=Sets the target framerate. 60 is the default.
adv.enginescale.help=Gets the current scale of the game (1, 1.5, 2, or 4 in most cases)
adv.stepsize.help=Gets the duration of each game step, in milliseconds.
adv.flxcont.help=Enables/Disables the Flixel default hot key controls.
adv.flxpause.help=Enables/Disables pausing when window focus is lost.
adv.offscreen.help=Used in determining when actors are off-screen relative to the screen.
adv.debugdraw.help=Enable physics wireframe drawing for debug purposes.
adv.customcode.help=Run arbitrary (Haxe) code.
adv.isplatform.help=Returns true if running on the given platform.
adv.isiphoneipad.help=(DEPRECATED) Returns true if running on the given platform.
adv.doplatform.help=Performs the enclosed logic if running on the given platform.
adv.loadunloadatlas.help=Loads/Unloads the given atlas in the NEXT scene. Use to save memory.
adv.atlasloaded.help=Returns true if the given atlas is loaded.
adv.exitgame.help=Exits the game. On Mobile this may send the game to the background. On Web this does nothing.
adv.gameurl.help=Returns the URL of the website where the game is running. Returns an empty string on non-Web platforms.
# Behavior (Actor)
adv.hassnippet.help=Returns true if the actor contains the given Behavior.
adv.getattribute.help=Gets the value of the attribute for the given Behavior.
adv.setattribute.help=Sets the value of the attribute for the given Behavior.
adv.say.help=Calls function for given Behavior under given actor.
adv.saythis.help=Calls function for this Behavior.
adv.shout.help=Calls function for all Behaviors for a given actor.
adv.snippet.actor.enabledisable.help=Enable/Disable the specified Actor Behavior.
adv.snippet.enable.help=Enable the specified Behavior.
adv.snippet.disable.help=Disable the current Behavior. Will finish execution first.
adv.snippet.disable2.help=Disable the specified Behavior.
adv.snippet.isenableda.help=Checks to see if the given Behavior is enabled for the actor.
adv.snippet.isenabled.help=Checks to see if the given Behavior is enabled for the current scene.
# Behavior (Scene)
adv.scene.hassnippet.help=Returns true if this scene contains the given Behavior.
adv.scene.getattribute.help=Gets the value of the attribute for the given Behavior.
adv.scene.setattribute.help=Sets the value of the attribute for the given Behavior.
adv.scene.say.help=Calls function for given Behavior for this scene.
adv.scene.shout.help=Calls function for all Behaviors for this scene.
adv.scene.snippet.enabledisable.help=Enable/Disable the specified Scene Behavior.
adv.scene.snippet.enable.help=Enable the specified Behavior.
adv.scene.snippet.disable.help=Disable the specified Behavior.
adv.snippet.scene.order.help=Set Behavior order for this scene. Can make the Behavior draw behind the scene.
# Drawing
draw.drawimagea.help=Draws specified actor's image.
draw.drawtext.help=Draws text on the screen.
draw.drawfillrect.help=Draws/Fills a rectangle to the screen.
draw.drawrect.help=Draws a rectangle on the screen.
draw.fillrect.help=Draws a filled rectangle to the screen.
draw.drawfillroundrect.help=Draws/Fills a rounded rectangle to the screen.
draw.drawroundrect.help=Draws a rounded rectangle on the screen.
draw.fillroundrect.help=Draws a filled rounded rectangle to the screen.
draw.drawline.help=Draws a line on the screen.
draw.drawfillcircle.help=Draws/Fills a circle to the screen. Specify the center (not the top left).
draw.drawcircle.help=Draws a circle to the screen. Specify the center (not the top left).
draw.fillcircle.help=Draws a filled circle to the screen. Specify the center (not the top left).
draw.drawpixel.help=Draws a pixel to the screen.
draw.begindrawfillcurve.help=Call this to begin drawing an outlined/filled curve shape.  Must use "stop drawing curve" when you're done.
draw.begindrawcurve.help=Call this to begin drawing an outline of a curved shape. Must use "stop drawing curve" when you're done.
draw.beginfillcurve.help=Call this to begin drawing an filled curved shape. Must use "stop drawing curve" when you're done.
draw.endfillcurve.help=Used to signal that that the curve you are drawing has all the points defined.
draw.addtocurve.help=Add an anchor point to the curve that you are drawing/filling.
draw.drawfillpoly.help=Draws/Fills a polygon.
draw.begindrawfillpoly.help=Call this to begin drawing an outlined/filled polygon. Must use "stop drawing polygon" when you're done.
draw.begindrawpoly.help=Call this to begin drawing an outline of a polygon. Must use "stop drawing polygon" when you're done.
draw.beginfillpoly.help=Call this to begin drawing a filled polygon. Must use "stop drawing polygon" when you're done.
draw.endfillpoly.help=Used to signal that that the polygon you are drawing has all the points defined.
draw.addtopoly.help=Add a vertex to polygon that you are drawing/filling. Must be used within "draw a outlined/filled polygon".
draw.gradient.linear.help=Set the current drawing "brush" to a linear gradient.
draw.gradient.radial.help=Set the current drawing "brush" to a radial gradient.
draw.stroke.setthickness.help=Set stroke thickness.
draw.stroke.setcolor.help=Set color of the stroke.
draw.setcolor.help=Sets the drawing color.
draw.setfont.help=Sets the font.
draw.setalpha.help=Sets the alpha transparency.
draw.setblend.help=Sets the blending mode. Only Add/Multiply/Screen work on Desktop/Mobile.
draw.getcolor.help=Gets the current drawing color.
draw.getfont.help=Gets the current font.
draw.getfontheight.help=Gets height of text using current font.
draw.getfontheight2.help=Gets height of text using specified font.
draw.getfontwidth.help=Gets width of text using current font.
draw.getfontwidth2.help=Gets width of text using specified font.
draw.getalpha.help=Gets the current alpha transparency.
draw.getblend.help=Gets the blending mode.
draw.transtoby.help=Shifts drawing origin by given amount, or to given location (in current space).
draw.translate.help=Shifts drawing origin by given amount.
draw.translateto.help=Shifts drawing origin to given location (in current space).
draw.toscreenspace.help=Transforms drawing to screen space if in local/actor space.
draw.tolocalspace.help=Transforms drawing to local/actor space if in screen space.
draw.filter.blend.actor.help=Set Blend Mode for Actor. Only Add/Multiply/Screen work on Desktop/Mobile.
draw.filter.blend.layer2.help=Set Blend Mode for Layer (by ID or name)
draw.filter.blend.layer.help=Set Blend Mode for Layer (by ID)
draw.filter.tint.help=Tint using color at opacity.
draw.filter.hsb.help=Adjust hue in degrees.
draw.filter.sat.help=Adjust saturation in absolute terms from 0-100%
draw.filter.bright.help=Adjust brightness in relative terms.
draw.filter.grayscale.help=Make image grayscale.
draw.filter.negative.help=Make image negative (inverted).
draw.filter.sepia.help=Make image sepia (like an old photograph)
# Collision
collision.top.help=Returns true if the other actor collided from the top.
collision.left.help=Returns true if the other actor collided from the left.
collision.bottom.help=Returns true if the other actor collided from the bottom.
collision.right.help=Returns true if the other actor collided from the right.
collision.type.help=Returns true if the other actor was an Actor/Terrain/Tile/Sensor.
collision.type2.help=Returns whether the actor hit or did not hit an Actor/Terrain/Tile/Sensor.
collision.tile.help=Returns true if the other actor was a tile.
collision.actor.help=Returns true if the other actor was an actor.
collision.sensor.help=Returns true if this collided with a sensor.
collision.actor.help=Returns true if the other actor was terrain.
collision.shape.group.me.help=Group of the shape that was collided with on THIS actor.
collision.shape.group.help=Group of the shape on the COLLIDING ("other") actor/terrain.
collision.shape.group2.help=The actor group of the collising shape of an actor involved in the collision. 
collision.foreach.help=Loops through every collision point for this actor.
collision.actorAB.help=The first/second actor involved
collision.actor1.help=The first actor involved
collision.actor2.help=The second actor involved
collision.isthisAB.help=Tests if actor1/actor2 is this Actor. The choice is arbitrary, so this test is required.
collision.isthis1.help=Tests if actor1 is this actor. The choice is arbitrary, so this test is required.
collision.isthis2.help=Tests if actor2 is this actor. The choice is arbitrary, so this test is required.
collision.xynxy.help=x/y pos or x/y normal (points from actor 1 to actor 2) of collision in scene space.
collision.x.help=x-pos of collision in scene space
collision.y.help=y-pos of collision in scene space
collision.nx.help=Points from actor 1 to actor 2. Negate to get the opposite.
collision.ny.help=Points from actor 1 to actor 2. Negate to get the opposite.
collision.tiledata.help=Data for the tile collided with, if this collision was with a tile.